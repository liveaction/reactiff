                      _   _  __  __         ______
  _ __ ___  __ _  ___| |_(_)/ _|/ _|       / / / /
 | '__/ _ \/ _` |/ __| __| | |_| |_ _____ / / / /
 | | |  __/ (_| | (__| |_| |  _|  _|_____/ / / /
 |_|  \___|\__,_|\___|\__|_|_| |_|      /_/_/_/

Route not found: GET /yes_not_exists

Available routes:
	GET  /boolean          => TestController.getBoolean(Request)                               : Mono<Boolean>
	GET  /booleans         => TestController.getBooleans(Request)                              : Flux<Boolean>
	GET  /failed           => TestController.failed()                                          : Mono<Result<String>>
	GET  /non              => TestController.unauthorized()                                    : Mono<String>
	GET  /oui              => TestController.authorized()                                      : Mono<String>
	GET  /yes/nosuch       => TestController.noSuchElementException(Request)                   : Mono<Void>
	GET  /yes/nosuchflux   => TestController.noSuchElementExceptionFlux(Request)               : Mono<Result<Void>>
	GET  /yes/unauthorized => TestController.unauthorizedException(Request)                    : Mono<Void>
	GET  /yes/{name}       => TestController.yes(Request)                                      : Flux<String>
	POST /boolean/flux     => TestController.booleanFlux(Request)                              : Mono<Boolean>
	POST /boolean/flux1    => TestController.booleanFlux1(Request)                             : Flux<Boolean>
	POST /boolean/mono     => TestController.booleanMono(Request)                              : Flux<Boolean>
	POST /boolean/mono1    => TestController.booleanMono1(Request)                             : Mono<Boolean>
	POST /upload           => TestController.upload(Request)                                   : Flux<byte[]>
	POST /yes              => TestController.postPojo(Request)                                 : Flux<Pojo>
	POST /yes/heavy        => TestController.postHeavyPojo(Request)                            : Flux<Pojo>
	WS   /websocket        => TestController.yesWebSocket(WebsocketInbound, WebsocketOutbound) : Publisher<Void>
